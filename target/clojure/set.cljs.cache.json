["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$clojure.set","~:imports",null,"~:requires",null,"~:uses",null,"~:defs",["^ ","~$union",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/heatherhaylett/.gitlibs/libs/org.clojure/clojurescript/00079768f9104b17f4130cd710a2f636e046cb07/src/main/cljs/clojure/set.cljs","~:line",19,"~:column",7,"~:end-line",19,"~:end-column",12,"~:arglists",["~#list",["~$quote",["^D",[[],["~$s1"],["^F","~$s2"],["^F","^G","~$&","~$sets"]]]]],"~:doc","Return a set that is the union of the input sets","~:top-fn",["^ ","~:variadic?",true,"~:fixed-arity",2,"~:max-fixed-arity",2,"~:method-params",[[],["^F"],["^F","^G"]],"^C",["^D",[[],["^F"],["^F","^G"],["^F","^G","~$&","^H"]]],"~:arglists-meta",["^D",[null,null,null,null]]]],"^5","~$clojure.set/union","^>","/Users/heatherhaylett/.gitlibs/libs/org.clojure/clojurescript/00079768f9104b17f4130cd710a2f636e046cb07/src/main/cljs/clojure/set.cljs","^B",12,"^J",["^ ","^K",true,"^L",2,"^M",2,"^N",[[],["^F"],["^F","^G"]],"^C",["^D",[[],["^F"],["^F","^G"],["^F","^G","~$&","^H"]]],"^O",["^D",[null,null,null,null]]],"^N",[[],["^F"],["^F","^G"]],"~:protocol-impl",null,"^L",2,"^O",["^D",[null,null,null,null]],"^@",1,"^K",true,"~:methods",[["^ ","^L",0,"^K",false,"~:tag","~$cljs.core/ISet"],["^ ","^L",1,"^K",false],["^ ","^L",2,"^K",false,"^S",["^4",[null,"~$any"]]],["^ ","^L",2,"^K",true,"^S",["^4",[null,"^U"]]]],"^?",19,"^A",19,"^M",2,"~:fn-var",true,"^C",["^D",[[],["^F"],["^F","^G"],["^F","^G","~$&","^H"]]],"^I","Return a set that is the union of the input sets"],"~$map-invert",["^ ","^<",null,"^=",["^ ","^>","/Users/heatherhaylett/.gitlibs/libs/org.clojure/clojurescript/00079768f9104b17f4130cd710a2f636e046cb07/src/main/cljs/clojure/set.cljs","^?",97,"^@",7,"^A",97,"^B",17,"^C",["^D",["^E",["^D",[["~$m"]]]]],"^I","Returns the map with the vals mapped to the keys."],"^5","~$clojure.set/map-invert","^>","/Users/heatherhaylett/.gitlibs/libs/org.clojure/clojurescript/00079768f9104b17f4130cd710a2f636e046cb07/src/main/cljs/clojure/set.cljs","^B",17,"^N",["^D",[["~$m"]]],"^Q",null,"^O",["^D",[null,null]],"^@",1,"^K",false,"^?",97,"~:ret-tag",["^4",[null,"^U"]],"^A",97,"^M",1,"^V",true,"^C",["^D",["^E",["^D",[["~$m"]]]]],"^I","Returns the map with the vals mapped to the keys."],"~$join",["^ ","^<",null,"^=",["^ ","^>","/Users/heatherhaylett/.gitlibs/libs/org.clojure/clojurescript/00079768f9104b17f4130cd710a2f636e046cb07/src/main/cljs/clojure/set.cljs","^?",101,"^@",7,"^A",101,"^B",11,"^C",["^D",["^E",["^D",[["~$xrel","~$yrel"],["^[","^10","~$km"]]]]],"^I","When passed 2 rels, returns the rel corresponding to the natural\n  join. When passed an additional keymap, joins on the corresponding\n  keys.","^J",["^ ","^K",false,"^L",3,"^M",3,"^N",[["^[","^10"],["^[","^10","^11"]],"^C",["^D",[["^[","^10"],["^[","^10","^11"]]],"^O",["^D",[null,null]]]],"^5","~$clojure.set/join","^>","/Users/heatherhaylett/.gitlibs/libs/org.clojure/clojurescript/00079768f9104b17f4130cd710a2f636e046cb07/src/main/cljs/clojure/set.cljs","^B",11,"^J",["^ ","^K",false,"^L",3,"^M",3,"^N",[["^[","^10"],["^[","^10","^11"]],"^C",["^D",[["^[","^10"],["^[","^10","^11"]]],"^O",["^D",[null,null]]],"^N",[["^[","^10"],["^[","^10","^11"]],"^Q",null,"^L",3,"^O",["^D",[null,null]],"^@",1,"^K",false,"^R",[["^ ","^L",2,"^K",false,"^S",["^4",[null,"^U","^T"]]],["^ ","^L",3,"^K",false,"^S",["^4",[null,"^U"]]]],"^?",101,"^A",101,"^M",3,"^V",true,"^C",["^D",[["^[","^10"],["^[","^10","^11"]]],"^I","When passed 2 rels, returns the rel corresponding to the natural\n  join. When passed an additional keymap, joins on the corresponding\n  keys."],"~$select",["^ ","^<",null,"^=",["^ ","^>","/Users/heatherhaylett/.gitlibs/libs/org.clojure/clojurescript/00079768f9104b17f4130cd710a2f636e046cb07/src/main/cljs/clojure/set.cljs","^?",61,"^@",7,"^A",61,"^B",13,"^C",["^D",["^E",["^D",[["~$pred","~$xset"]]]]],"^I","Returns a set of the elements for which pred is true"],"^5","~$clojure.set/select","^>","/Users/heatherhaylett/.gitlibs/libs/org.clojure/clojurescript/00079768f9104b17f4130cd710a2f636e046cb07/src/main/cljs/clojure/set.cljs","^B",13,"^N",["^D",[["^14","^15"]]],"^Q",null,"^O",["^D",[null,null]],"^@",1,"^K",false,"^?",61,"^Y",["^4",[null,"^U"]],"^A",61,"^M",2,"^V",true,"^C",["^D",["^E",["^D",[["^14","^15"]]]]],"^I","Returns a set of the elements for which pred is true"],"~$intersection",["^ ","^<",null,"^=",["^ ","^>","/Users/heatherhaylett/.gitlibs/libs/org.clojure/clojurescript/00079768f9104b17f4130cd710a2f636e046cb07/src/main/cljs/clojure/set.cljs","^?",31,"^@",7,"^A",31,"^B",19,"^C",["^D",["^E",["^D",[["^F"],["^F","^G"],["^F","^G","~$&","^H"]]]]],"^I","Return a set that is the intersection of the input sets","^J",["^ ","^K",true,"^L",2,"^M",2,"^N",[["^F"],["^F","^G"]],"^C",["^D",[["^F"],["^F","^G"],["^F","^G","~$&","^H"]]],"^O",["^D",[null,null,null]]]],"^5","~$clojure.set/intersection","^>","/Users/heatherhaylett/.gitlibs/libs/org.clojure/clojurescript/00079768f9104b17f4130cd710a2f636e046cb07/src/main/cljs/clojure/set.cljs","^B",19,"^J",["^ ","^K",true,"^L",2,"^M",2,"^N",[["^F"],["^F","^G"]],"^C",["^D",[["^F"],["^F","^G"],["^F","^G","~$&","^H"]]],"^O",["^D",[null,null,null]]],"^N",[["^F"],["^F","^G"]],"^Q",null,"^L",2,"^O",["^D",[null,null,null]],"^@",1,"^K",true,"^R",[["^ ","^L",1,"^K",false],["^ ","^L",2,"^K",false,"^S",["^4",[null,"^U"]]],["^ ","^L",2,"^K",true,"^S",["^4",[null,"^U"]]]],"^?",31,"^A",31,"^M",2,"^V",true,"^C",["^D",[["^F"],["^F","^G"],["^F","^G","~$&","^H"]]],"^I","Return a set that is the intersection of the input sets"],"~$superset?",["^ ","^<",null,"^=",["^ ","^>","/Users/heatherhaylett/.gitlibs/libs/org.clojure/clojurescript/00079768f9104b17f4130cd710a2f636e046cb07/src/main/cljs/clojure/set.cljs","^?",137,"^@",7,"^A",137,"^B",16,"^C",["^D",["^E",["^D",[["~$set1","~$set2"]]]]],"^I","Is set1 a superset of set2?"],"^5","~$clojure.set/superset?","^>","/Users/heatherhaylett/.gitlibs/libs/org.clojure/clojurescript/00079768f9104b17f4130cd710a2f636e046cb07/src/main/cljs/clojure/set.cljs","^B",16,"^N",["^D",[["^1:","^1;"]]],"^Q",null,"^O",["^D",[null,null]],"^@",1,"^K",false,"^?",137,"^Y","~$boolean","^A",137,"^M",2,"^V",true,"^C",["^D",["^E",["^D",[["^1:","^1;"]]]]],"^I","Is set1 a superset of set2?"],"~$index",["^ ","^<",null,"^=",["^ ","^>","/Users/heatherhaylett/.gitlibs/libs/org.clojure/clojurescript/00079768f9104b17f4130cd710a2f636e046cb07/src/main/cljs/clojure/set.cljs","^?",87,"^@",7,"^A",87,"^B",12,"^C",["^D",["^E",["^D",[["^[","~$ks"]]]]],"^I","Returns a map of the distinct values of ks in the xrel mapped to a\n  set of the maps in xrel with the corresponding values of ks."],"^5","~$clojure.set/index","^>","/Users/heatherhaylett/.gitlibs/libs/org.clojure/clojurescript/00079768f9104b17f4130cd710a2f636e046cb07/src/main/cljs/clojure/set.cljs","^B",12,"^N",["^D",[["^[","^1?"]]],"^Q",null,"^O",["^D",[null,null]],"^@",1,"^K",false,"^?",87,"^Y",["^4",[null,"^U"]],"^A",87,"^M",2,"^V",true,"^C",["^D",["^E",["^D",[["^[","^1?"]]]]],"^I","Returns a map of the distinct values of ks in the xrel mapped to a\n  set of the maps in xrel with the corresponding values of ks."],"~$bubble-max-key",["^ ","^<",null,"^=",["^ ","^>","/Users/heatherhaylett/.gitlibs/libs/org.clojure/clojurescript/00079768f9104b17f4130cd710a2f636e046cb07/src/main/cljs/clojure/set.cljs","^?",13,"^@",8,"^A",13,"^B",22,"~:private",true,"^C",["^D",["^E",["^D",[["~$k","~$coll"]]]]]],"^1B",true,"^5","~$clojure.set/bubble-max-key","^>","/Users/heatherhaylett/.gitlibs/libs/org.clojure/clojurescript/00079768f9104b17f4130cd710a2f636e046cb07/src/main/cljs/clojure/set.cljs","^B",22,"^N",["^D",[["~$k","^1C"]]],"^Q",null,"^O",["^D",[null,null]],"^@",1,"^K",false,"^?",13,"^Y","~$clj","^A",13,"^M",2,"^V",true,"^C",["^D",["^E",["^D",[["~$k","^1C"]]]]]],"~$subset?",["^ ","^<",null,"^=",["^ ","^>","/Users/heatherhaylett/.gitlibs/libs/org.clojure/clojurescript/00079768f9104b17f4130cd710a2f636e046cb07/src/main/cljs/clojure/set.cljs","^?",131,"^@",7,"^A",131,"^B",14,"^C",["^D",["^E",["^D",[["^1:","^1;"]]]]],"^I","Is set1 a subset of set2?"],"^5","~$clojure.set/subset?","^>","/Users/heatherhaylett/.gitlibs/libs/org.clojure/clojurescript/00079768f9104b17f4130cd710a2f636e046cb07/src/main/cljs/clojure/set.cljs","^B",14,"^N",["^D",[["^1:","^1;"]]],"^Q",null,"^O",["^D",[null,null]],"^@",1,"^K",false,"^?",131,"^Y","^1=","^A",131,"^M",2,"^V",true,"^C",["^D",["^E",["^D",[["^1:","^1;"]]]]],"^I","Is set1 a subset of set2?"],"~$rename",["^ ","^<",null,"^=",["^ ","^>","/Users/heatherhaylett/.gitlibs/libs/org.clojure/clojurescript/00079768f9104b17f4130cd710a2f636e046cb07/src/main/cljs/clojure/set.cljs","^?",82,"^@",7,"^A",82,"^B",13,"^C",["^D",["^E",["^D",[["^[","~$kmap"]]]]],"^I","Returns a rel of the maps in xrel with the keys in kmap renamed to the vals in kmap"],"^5","~$clojure.set/rename","^>","/Users/heatherhaylett/.gitlibs/libs/org.clojure/clojurescript/00079768f9104b17f4130cd710a2f636e046cb07/src/main/cljs/clojure/set.cljs","^B",13,"^N",["^D",[["^[","^1I"]]],"^Q",null,"^O",["^D",[null,null]],"^@",1,"^K",false,"^?",82,"^Y",["^4",["^1E","^U","^T","~$cljs.core/MetaFn","~$clj-nil"]],"^A",82,"^M",2,"^V",true,"^C",["^D",["^E",["^D",[["^[","^1I"]]]]],"^I","Returns a rel of the maps in xrel with the keys in kmap renamed to the vals in kmap"],"~$rename-keys",["^ ","^<",null,"^=",["^ ","^>","/Users/heatherhaylett/.gitlibs/libs/org.clojure/clojurescript/00079768f9104b17f4130cd710a2f636e046cb07/src/main/cljs/clojure/set.cljs","^?",72,"^@",7,"^A",72,"^B",18,"^C",["^D",["^E",["^D",[["~$map","^1I"]]]]],"^I","Returns the map with the keys in kmap renamed to the vals in kmap"],"^5","~$clojure.set/rename-keys","^>","/Users/heatherhaylett/.gitlibs/libs/org.clojure/clojurescript/00079768f9104b17f4130cd710a2f636e046cb07/src/main/cljs/clojure/set.cljs","^B",18,"^N",["^D",[["^1N","^1I"]]],"^Q",null,"^O",["^D",[null,null]],"^@",1,"^K",false,"^?",72,"^Y",["^4",[null,"^U"]],"^A",72,"^M",2,"^V",true,"^C",["^D",["^E",["^D",[["^1N","^1I"]]]]],"^I","Returns the map with the keys in kmap renamed to the vals in kmap"],"~$project",["^ ","^<",null,"^=",["^ ","^>","/Users/heatherhaylett/.gitlibs/libs/org.clojure/clojurescript/00079768f9104b17f4130cd710a2f636e046cb07/src/main/cljs/clojure/set.cljs","^?",67,"^@",7,"^A",67,"^B",14,"^C",["^D",["^E",["^D",[["^[","^1?"]]]]],"^I","Returns a rel of the elements of xrel with only the keys in ks"],"^5","~$clojure.set/project","^>","/Users/heatherhaylett/.gitlibs/libs/org.clojure/clojurescript/00079768f9104b17f4130cd710a2f636e046cb07/src/main/cljs/clojure/set.cljs","^B",14,"^N",["^D",[["^[","^1?"]]],"^Q",null,"^O",["^D",[null,null]],"^@",1,"^K",false,"^?",67,"^Y",["^4",["^1E","^U","^T","^1K","^1L"]],"^A",67,"^M",2,"^V",true,"^C",["^D",["^E",["^D",[["^[","^1?"]]]]],"^I","Returns a rel of the elements of xrel with only the keys in ks"],"~$difference",["^ ","^<",null,"^=",["^ ","^>","/Users/heatherhaylett/.gitlibs/libs/org.clojure/clojurescript/00079768f9104b17f4130cd710a2f636e046cb07/src/main/cljs/clojure/set.cljs","^?",46,"^@",7,"^A",46,"^B",17,"^C",["^D",["^E",["^D",[["^F"],["^F","^G"],["^F","^G","~$&","^H"]]]]],"^I","Return a set that is the first set without elements of the remaining sets","^J",["^ ","^K",true,"^L",2,"^M",2,"^N",[["^F"],["^F","^G"]],"^C",["^D",[["^F"],["^F","^G"],["^F","^G","~$&","^H"]]],"^O",["^D",[null,null,null]]]],"^5","~$clojure.set/difference","^>","/Users/heatherhaylett/.gitlibs/libs/org.clojure/clojurescript/00079768f9104b17f4130cd710a2f636e046cb07/src/main/cljs/clojure/set.cljs","^B",17,"^J",["^ ","^K",true,"^L",2,"^M",2,"^N",[["^F"],["^F","^G"]],"^C",["^D",[["^F"],["^F","^G"],["^F","^G","~$&","^H"]]],"^O",["^D",[null,null,null]]],"^N",[["^F"],["^F","^G"]],"^Q",null,"^L",2,"^O",["^D",[null,null,null]],"^@",1,"^K",true,"^R",[["^ ","^L",1,"^K",false],["^ ","^L",2,"^K",false,"^S",["^4",[null,"^U"]]],["^ ","^L",2,"^K",true,"^S",["^4",[null,"^U"]]]],"^?",46,"^A",46,"^M",2,"^V",true,"^C",["^D",[["^F"],["^F","^G"],["^F","^G","~$&","^H"]]],"^I","Return a set that is the first set without elements of the remaining sets"]],"~:require-macros",null,"^I","Set operations such as union/intersection."]